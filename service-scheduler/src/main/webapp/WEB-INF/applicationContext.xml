<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.maryanto.dimas.scheduler.example"/>
    <context:property-placeholder location="classpath:/jdbc.properties"/>
    <bean id="dataSource" name="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="url" value="${oracledb.url}"/>
        <property name="username" value="${oracledb.username}"/>
        <property name="password" value="${oracledb.password}"/>
        <property name="driverClassName" value="${oracledb.driver-class-name}"/>
    </bean>
    <bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>
    <bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="queryComponent" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="quartzComponent" class="org.apache.camel.component.quartz.QuartzComponent">
        <property name="scheduler" ref="scheduler"/>
    </bean>
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="autoStartup" value="true"/>
        <property name="schedulerContextAsMap">
            <map>
                <entry key="CamelQuartzCamelContext" value-ref="camelContext"/>
            </map>
        </property>
        <property name="waitForJobsToCompleteOnShutdown">
            <value>true</value>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">QuartzScheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>

                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">25</prop>
                <prop key="org.quartz.threadPool.threadPriority">4</prop>

                <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>

                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
                <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.oracle.OracleDelegate</prop>
                <prop key="org.quartz.jobStore.useProperties">false</prop>
                <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>

                <prop key="org.quartz.jobStore.isClustered">false</prop>
                <prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
            </props>
        </property>
    </bean>

    <camelContext autoStartup="true" trace="true" id="camelContext" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="placeholder" location="classpath:/query.properties"/>
        <route id="clusteredRoute">
            <from uri="quartzComponent://schedulerJsonId/mandiriApp?cron=0+0/1+*+1/1+*+?+*"/>
            <log message="Fired quartz cluster trigger"/>
        </route>
    </camelContext>
</beans>
